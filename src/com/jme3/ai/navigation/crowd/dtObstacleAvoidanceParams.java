package com.jme3.ai.navigation.crowd;


import com.jme3.ai.navigation.utils.RecastJNI;

/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


public class dtObstacleAvoidanceParams {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  public dtObstacleAvoidanceParams(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  public static long getCPtr(dtObstacleAvoidanceParams obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        RecastJNI.delete_dtObstacleAvoidanceParams(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setVelBias(float value) {
    RecastJNI.dtObstacleAvoidanceParams_velBias_set(swigCPtr, this, value);
  }

  public float getVelBias() {
    return RecastJNI.dtObstacleAvoidanceParams_velBias_get(swigCPtr, this);
  }

  public void setWeightDesVel(float value) {
    RecastJNI.dtObstacleAvoidanceParams_weightDesVel_set(swigCPtr, this, value);
  }

  public float getWeightDesVel() {
    return RecastJNI.dtObstacleAvoidanceParams_weightDesVel_get(swigCPtr, this);
  }

  public void setWeightCurVel(float value) {
    RecastJNI.dtObstacleAvoidanceParams_weightCurVel_set(swigCPtr, this, value);
  }

  public float getWeightCurVel() {
    return RecastJNI.dtObstacleAvoidanceParams_weightCurVel_get(swigCPtr, this);
  }

  public void setWeightSide(float value) {
    RecastJNI.dtObstacleAvoidanceParams_weightSide_set(swigCPtr, this, value);
  }

  public float getWeightSide() {
    return RecastJNI.dtObstacleAvoidanceParams_weightSide_get(swigCPtr, this);
  }

  public void setWeightToi(float value) {
    RecastJNI.dtObstacleAvoidanceParams_weightToi_set(swigCPtr, this, value);
  }

  public float getWeightToi() {
    return RecastJNI.dtObstacleAvoidanceParams_weightToi_get(swigCPtr, this);
  }

  public void setHorizTime(float value) {
    RecastJNI.dtObstacleAvoidanceParams_horizTime_set(swigCPtr, this, value);
  }

  public float getHorizTime() {
    return RecastJNI.dtObstacleAvoidanceParams_horizTime_get(swigCPtr, this);
  }

  public void setGridSize(short value) {
    RecastJNI.dtObstacleAvoidanceParams_gridSize_set(swigCPtr, this, value);
  }

  public short getGridSize() {
    return RecastJNI.dtObstacleAvoidanceParams_gridSize_get(swigCPtr, this);
  }

  public void setAdaptiveDivs(short value) {
    RecastJNI.dtObstacleAvoidanceParams_adaptiveDivs_set(swigCPtr, this, value);
  }

  public short getAdaptiveDivs() {
    return RecastJNI.dtObstacleAvoidanceParams_adaptiveDivs_get(swigCPtr, this);
  }

  public void setAdaptiveRings(short value) {
    RecastJNI.dtObstacleAvoidanceParams_adaptiveRings_set(swigCPtr, this, value);
  }

  public short getAdaptiveRings() {
    return RecastJNI.dtObstacleAvoidanceParams_adaptiveRings_get(swigCPtr, this);
  }

  public void setAdaptiveDepth(short value) {
    RecastJNI.dtObstacleAvoidanceParams_adaptiveDepth_set(swigCPtr, this, value);
  }

  public short getAdaptiveDepth() {
    return RecastJNI.dtObstacleAvoidanceParams_adaptiveDepth_get(swigCPtr, this);
  }

  public dtObstacleAvoidanceParams() {
    this(RecastJNI.new_dtObstacleAvoidanceParams(), true);
  }

}
