package com.jme3.ai.navigation.crowd;


import com.jme3.ai.navigation.utils.SWIGTYPE_p_float;
import com.jme3.ai.navigation.utils.RecastJNI;

/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


public class dtObstacleCircle {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  public dtObstacleCircle(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  public static long getCPtr(dtObstacleCircle obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        RecastJNI.delete_dtObstacleCircle(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setP(SWIGTYPE_p_float value) {
    RecastJNI.dtObstacleCircle_p_set(swigCPtr, this, SWIGTYPE_p_float.getCPtr(value));
  }

  public SWIGTYPE_p_float getP() {
    long cPtr = RecastJNI.dtObstacleCircle_p_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_float(cPtr, false);
  }

  public void setVel(SWIGTYPE_p_float value) {
    RecastJNI.dtObstacleCircle_vel_set(swigCPtr, this, SWIGTYPE_p_float.getCPtr(value));
  }

  public SWIGTYPE_p_float getVel() {
    long cPtr = RecastJNI.dtObstacleCircle_vel_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_float(cPtr, false);
  }

  public void setDvel(SWIGTYPE_p_float value) {
    RecastJNI.dtObstacleCircle_dvel_set(swigCPtr, this, SWIGTYPE_p_float.getCPtr(value));
  }

  public SWIGTYPE_p_float getDvel() {
    long cPtr = RecastJNI.dtObstacleCircle_dvel_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_float(cPtr, false);
  }

  public void setRad(float value) {
    RecastJNI.dtObstacleCircle_rad_set(swigCPtr, this, value);
  }

  public float getRad() {
    return RecastJNI.dtObstacleCircle_rad_get(swigCPtr, this);
  }

  public void setDp(SWIGTYPE_p_float value) {
    RecastJNI.dtObstacleCircle_dp_set(swigCPtr, this, SWIGTYPE_p_float.getCPtr(value));
  }

  public SWIGTYPE_p_float getDp() {
    long cPtr = RecastJNI.dtObstacleCircle_dp_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_float(cPtr, false);
  }

  public void setNp(SWIGTYPE_p_float value) {
    RecastJNI.dtObstacleCircle_np_set(swigCPtr, this, SWIGTYPE_p_float.getCPtr(value));
  }

  public SWIGTYPE_p_float getNp() {
    long cPtr = RecastJNI.dtObstacleCircle_np_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_float(cPtr, false);
  }

  public dtObstacleCircle() {
    this(RecastJNI.new_dtObstacleCircle(), true);
  }

}
